//
// OneDriveSharepointCredentials.swift
//
// Generated by Konfig
// https://konfigthis.com
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct OneDriveSharepointCredentials: Codable, JSONEncodable, Hashable {

    public var clientId: String
    public var redirectUri: String
    public var clientSecret: String?
    public var filePickerClientId: String?
    public var filePickerRedirectUri: String?

    public init(clientId: String, redirectUri: String, clientSecret: String? = nil, filePickerClientId: String? = nil, filePickerRedirectUri: String? = nil) {
        self.clientId = clientId
        self.redirectUri = redirectUri
        self.clientSecret = clientSecret
        self.filePickerClientId = filePickerClientId
        self.filePickerRedirectUri = filePickerRedirectUri
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case clientId = "client_id"
        case redirectUri = "redirect_uri"
        case clientSecret = "client_secret"
        case filePickerClientId = "file_picker_client_id"
        case filePickerRedirectUri = "file_picker_redirect_uri"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var codingContainer = encoder.container(keyedBy: CodingKeys.self)
        try codingContainer.encode(clientId, forKey: .clientId)
        try codingContainer.encode(redirectUri, forKey: .redirectUri)
        try codingContainer.encodeIfPresent(clientSecret, forKey: .clientSecret)
        try codingContainer.encodeIfPresent(filePickerClientId, forKey: .filePickerClientId)
        try codingContainer.encodeIfPresent(filePickerRedirectUri, forKey: .filePickerRedirectUri)
    }
}

