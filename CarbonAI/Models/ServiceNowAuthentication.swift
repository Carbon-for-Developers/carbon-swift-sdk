//
// ServiceNowAuthentication.swift
//
// Generated by Konfig
// https://konfigthis.com
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ServiceNowAuthentication: Codable, JSONEncodable, Hashable {

    public var source: AnyCodable?
    public var accessToken: String
    public var refreshToken: String?
    public var instanceSubdomain: String
    public var clientId: String
    public var clientSecret: String
    public var redirectUri: String

    public init(source: AnyCodable?, accessToken: String, refreshToken: String? = nil, instanceSubdomain: String, clientId: String, clientSecret: String, redirectUri: String) {
        self.source = source
        self.accessToken = accessToken
        self.refreshToken = refreshToken
        self.instanceSubdomain = instanceSubdomain
        self.clientId = clientId
        self.clientSecret = clientSecret
        self.redirectUri = redirectUri
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case source
        case accessToken = "access_token"
        case refreshToken = "refresh_token"
        case instanceSubdomain = "instance_subdomain"
        case clientId = "client_id"
        case clientSecret = "client_secret"
        case redirectUri = "redirect_uri"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(source, forKey: .source)
        try container.encode(accessToken, forKey: .accessToken)
        try container.encodeIfPresent(refreshToken, forKey: .refreshToken)
        try container.encode(instanceSubdomain, forKey: .instanceSubdomain)
        try container.encode(clientId, forKey: .clientId)
        try container.encode(clientSecret, forKey: .clientSecret)
        try container.encode(redirectUri, forKey: .redirectUri)
    }
}

