//
// SentWebhookPayloadObject.swift
//
// Generated by Konfig
// https://konfigthis.com
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct SentWebhookPayloadObject: Codable, JSONEncodable, Hashable {

    public enum ObjectType: String, Codable, CaseIterable {
        case chunkList = "CHUNK_LIST"
        case dataSource = "DATA_SOURCE"
        case file = "FILE"
        case fileList = "FILE_LIST"
        case _none = "NONE"
        case organizationUser = "ORGANIZATION_USER"
        case uploadRequestId = "UPLOAD_REQUEST_ID"
        case webpage = "WEBPAGE"
    }
    public var objectType: ObjectType?
    public var objectId: SentWebhookPayloadObjectObjectId?
    public var additionalInformation: SentWebhookPayloadObjectAdditionalInformation?

    public init(objectType: ObjectType? = nil, objectId: SentWebhookPayloadObjectObjectId? = nil, additionalInformation: SentWebhookPayloadObjectAdditionalInformation? = nil) {
        self.objectType = objectType
        self.objectId = objectId
        self.additionalInformation = additionalInformation
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case objectType = "object_type"
        case objectId = "object_id"
        case additionalInformation = "additional_information"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(objectType, forKey: .objectType)
        try container.encodeIfPresent(objectId, forKey: .objectId)
        try container.encodeIfPresent(additionalInformation, forKey: .additionalInformation)
    }
}

