//
// Event.swift
//
// Generated by Konfig
// https://konfigthis.com
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Event: Codable, JSONEncodable, Hashable {

    public var description: String?
    public var id: String
    public var owner: PartialOwner
    public var subject: String?
    public var location: String?
    public var isAllDay: Bool
    public var startDate: String?
    public var endDate: String?
    public var account: PartialAccountNullable?
    public var contact: PartialContactNullable?
    public var createdAt: String
    public var updatedAt: String
    public var isDeleted: Bool
    public var remoteData: AnyCodable?

    public init(description: String?, id: String, owner: PartialOwner, subject: String?, location: String?, isAllDay: Bool, startDate: String?, endDate: String?, account: PartialAccountNullable?, contact: PartialContactNullable?, createdAt: String, updatedAt: String, isDeleted: Bool, remoteData: AnyCodable?) {
        self.description = description
        self.id = id
        self.owner = owner
        self.subject = subject
        self.location = location
        self.isAllDay = isAllDay
        self.startDate = startDate
        self.endDate = endDate
        self.account = account
        self.contact = contact
        self.createdAt = createdAt
        self.updatedAt = updatedAt
        self.isDeleted = isDeleted
        self.remoteData = remoteData
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case description
        case id
        case owner
        case subject
        case location
        case isAllDay = "is_all_day"
        case startDate = "start_date"
        case endDate = "end_date"
        case account
        case contact
        case createdAt = "created_at"
        case updatedAt = "updated_at"
        case isDeleted = "is_deleted"
        case remoteData = "remote_data"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var codingContainer = encoder.container(keyedBy: CodingKeys.self)
        try codingContainer.encode(description, forKey: .description)
        try codingContainer.encode(id, forKey: .id)
        try codingContainer.encode(owner, forKey: .owner)
        try codingContainer.encode(subject, forKey: .subject)
        try codingContainer.encode(location, forKey: .location)
        try codingContainer.encode(isAllDay, forKey: .isAllDay)
        try codingContainer.encode(startDate, forKey: .startDate)
        try codingContainer.encode(endDate, forKey: .endDate)
        try codingContainer.encode(account, forKey: .account)
        try codingContainer.encode(contact, forKey: .contact)
        try codingContainer.encode(createdAt, forKey: .createdAt)
        try codingContainer.encode(updatedAt, forKey: .updatedAt)
        try codingContainer.encode(isDeleted, forKey: .isDeleted)
        try codingContainer.encode(remoteData, forKey: .remoteData)
    }
}

