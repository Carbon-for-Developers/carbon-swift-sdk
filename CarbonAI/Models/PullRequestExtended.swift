//
// PullRequestExtended.swift
//
// Generated by Konfig
// https://konfigthis.com
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct PullRequestExtended: Codable, JSONEncodable, Hashable {

    public var title: String
    public var id: Int
    public var url: String
    public var number: Int
    public var state: PRState
    public var user: User
    public var createdAt: String
    public var updatedAt: String
    public var closedAt: String?
    public var mergedAt: String?
    public var requestedReviewers: [User]
    public var requestedTeams: [Team]
    public var labels: [Label]
    public var draft: Bool
    public var head: HeadOrBase
    public var base: HeadOrBase
    public var remoteData: AnyCodable?
    public var merged: Bool
    public var numComments: Int
    public var numReviewComments: Int
    public var numCommits: Int
    public var numAdditions: Int
    public var numDeletions: Int
    public var numChangedFiles: Int

    public init(title: String, id: Int, url: String, number: Int, state: PRState, user: User, createdAt: String, updatedAt: String, closedAt: String?, mergedAt: String?, requestedReviewers: [User], requestedTeams: [Team], labels: [Label], draft: Bool, head: HeadOrBase, base: HeadOrBase, remoteData: AnyCodable?, merged: Bool, numComments: Int, numReviewComments: Int, numCommits: Int, numAdditions: Int, numDeletions: Int, numChangedFiles: Int) {
        self.title = title
        self.id = id
        self.url = url
        self.number = number
        self.state = state
        self.user = user
        self.createdAt = createdAt
        self.updatedAt = updatedAt
        self.closedAt = closedAt
        self.mergedAt = mergedAt
        self.requestedReviewers = requestedReviewers
        self.requestedTeams = requestedTeams
        self.labels = labels
        self.draft = draft
        self.head = head
        self.base = base
        self.remoteData = remoteData
        self.merged = merged
        self.numComments = numComments
        self.numReviewComments = numReviewComments
        self.numCommits = numCommits
        self.numAdditions = numAdditions
        self.numDeletions = numDeletions
        self.numChangedFiles = numChangedFiles
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case title
        case id
        case url
        case number
        case state
        case user
        case createdAt = "created_at"
        case updatedAt = "updated_at"
        case closedAt = "closed_at"
        case mergedAt = "merged_at"
        case requestedReviewers = "requested_reviewers"
        case requestedTeams = "requested_teams"
        case labels
        case draft
        case head
        case base
        case remoteData = "remote_data"
        case merged
        case numComments = "num_comments"
        case numReviewComments = "num_review_comments"
        case numCommits = "num_commits"
        case numAdditions = "num_additions"
        case numDeletions = "num_deletions"
        case numChangedFiles = "num_changed_files"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var codingContainer = encoder.container(keyedBy: CodingKeys.self)
        try codingContainer.encode(title, forKey: .title)
        try codingContainer.encode(id, forKey: .id)
        try codingContainer.encode(url, forKey: .url)
        try codingContainer.encode(number, forKey: .number)
        try codingContainer.encode(state, forKey: .state)
        try codingContainer.encode(user, forKey: .user)
        try codingContainer.encode(createdAt, forKey: .createdAt)
        try codingContainer.encode(updatedAt, forKey: .updatedAt)
        try codingContainer.encode(closedAt, forKey: .closedAt)
        try codingContainer.encode(mergedAt, forKey: .mergedAt)
        try codingContainer.encode(requestedReviewers, forKey: .requestedReviewers)
        try codingContainer.encode(requestedTeams, forKey: .requestedTeams)
        try codingContainer.encode(labels, forKey: .labels)
        try codingContainer.encode(draft, forKey: .draft)
        try codingContainer.encode(head, forKey: .head)
        try codingContainer.encode(base, forKey: .base)
        try codingContainer.encode(remoteData, forKey: .remoteData)
        try codingContainer.encode(merged, forKey: .merged)
        try codingContainer.encode(numComments, forKey: .numComments)
        try codingContainer.encode(numReviewComments, forKey: .numReviewComments)
        try codingContainer.encode(numCommits, forKey: .numCommits)
        try codingContainer.encode(numAdditions, forKey: .numAdditions)
        try codingContainer.encode(numDeletions, forKey: .numDeletions)
        try codingContainer.encode(numChangedFiles, forKey: .numChangedFiles)
    }
}

