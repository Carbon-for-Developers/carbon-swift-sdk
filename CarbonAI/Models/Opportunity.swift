//
// Opportunity.swift
//
// Generated by Konfig
// https://konfigthis.com
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Opportunity: Codable, JSONEncodable, Hashable {

    public var description: String?
    public var id: String
    public var owner: PartialOwner
    public var name: String?
    public var amount: Int?
    public var account: PartialAccountNullable?
    public var contact: PartialContactNullable?
    public var stage: String?
    public var status: OpportunityStatusNullable?
    public var closeDate: String?
    public var lastActivityAt: String?
    public var createdAt: String
    public var updatedAt: String
    public var isDeleted: Bool
    public var tasks: [Task]?
    public var events: [Event]?
    public var remoteData: AnyCodable?

    public init(description: String?, id: String, owner: PartialOwner, name: String?, amount: Int?, account: PartialAccountNullable?, contact: PartialContactNullable?, stage: String?, status: OpportunityStatusNullable?, closeDate: String?, lastActivityAt: String?, createdAt: String, updatedAt: String, isDeleted: Bool, tasks: [Task]? = nil, events: [Event]? = nil, remoteData: AnyCodable?) {
        self.description = description
        self.id = id
        self.owner = owner
        self.name = name
        self.amount = amount
        self.account = account
        self.contact = contact
        self.stage = stage
        self.status = status
        self.closeDate = closeDate
        self.lastActivityAt = lastActivityAt
        self.createdAt = createdAt
        self.updatedAt = updatedAt
        self.isDeleted = isDeleted
        self.tasks = tasks
        self.events = events
        self.remoteData = remoteData
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case description
        case id
        case owner
        case name
        case amount
        case account
        case contact
        case stage
        case status
        case closeDate = "close_date"
        case lastActivityAt = "last_activity_at"
        case createdAt = "created_at"
        case updatedAt = "updated_at"
        case isDeleted = "is_deleted"
        case tasks
        case events
        case remoteData = "remote_data"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var codingContainer = encoder.container(keyedBy: CodingKeys.self)
        try codingContainer.encode(description, forKey: .description)
        try codingContainer.encode(id, forKey: .id)
        try codingContainer.encode(owner, forKey: .owner)
        try codingContainer.encode(name, forKey: .name)
        try codingContainer.encode(amount, forKey: .amount)
        try codingContainer.encode(account, forKey: .account)
        try codingContainer.encode(contact, forKey: .contact)
        try codingContainer.encode(stage, forKey: .stage)
        try codingContainer.encode(status, forKey: .status)
        try codingContainer.encode(closeDate, forKey: .closeDate)
        try codingContainer.encode(lastActivityAt, forKey: .lastActivityAt)
        try codingContainer.encode(createdAt, forKey: .createdAt)
        try codingContainer.encode(updatedAt, forKey: .updatedAt)
        try codingContainer.encode(isDeleted, forKey: .isDeleted)
        try codingContainer.encodeIfPresent(tasks, forKey: .tasks)
        try codingContainer.encodeIfPresent(events, forKey: .events)
        try codingContainer.encode(remoteData, forKey: .remoteData)
    }
}

