//
// ListUserResponse.swift
//
// Generated by Konfig
// https://konfigthis.com
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ListUserResponse: Codable, JSONEncodable, Hashable {

    public var id: Int
    public var organizationId: Int
    public var organizationSuppliedUserId: String
    public var createdAt: Date
    public var updatedAt: Date
    public var deletedAt: Date?
    public var enabledFeatures: AnyCodable?
    public var customLimits: AnyCodable
    public var autoSyncEnabledSources: [AnyCodable]

    public init(id: Int, organizationId: Int, organizationSuppliedUserId: String, createdAt: Date, updatedAt: Date, deletedAt: Date?, enabledFeatures: AnyCodable?, customLimits: AnyCodable, autoSyncEnabledSources: [AnyCodable]) {
        self.id = id
        self.organizationId = organizationId
        self.organizationSuppliedUserId = organizationSuppliedUserId
        self.createdAt = createdAt
        self.updatedAt = updatedAt
        self.deletedAt = deletedAt
        self.enabledFeatures = enabledFeatures
        self.customLimits = customLimits
        self.autoSyncEnabledSources = autoSyncEnabledSources
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case organizationId = "organization_id"
        case organizationSuppliedUserId = "organization_supplied_user_id"
        case createdAt = "created_at"
        case updatedAt = "updated_at"
        case deletedAt = "deleted_at"
        case enabledFeatures = "enabled_features"
        case customLimits = "custom_limits"
        case autoSyncEnabledSources = "auto_sync_enabled_sources"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(organizationId, forKey: .organizationId)
        try container.encode(organizationSuppliedUserId, forKey: .organizationSuppliedUserId)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(updatedAt, forKey: .updatedAt)
        try container.encode(deletedAt, forKey: .deletedAt)
        try container.encode(enabledFeatures, forKey: .enabledFeatures)
        try container.encode(customLimits, forKey: .customLimits)
        try container.encode(autoSyncEnabledSources, forKey: .autoSyncEnabledSources)
    }
}

